# Archivo: .env

# ===============================
# CONFIGURACIÓN DE DJANGO
# ===============================
# Clave secreta para la seguridad de Django. En producción, usa una generada aleatoriamente.
# Puedes generar una nueva con: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY="ps3wr-+^q!lo^o@2e@v!gxqe_lkfbpd_l70=%!x=$0e3rnlx7l"

# Ponlo en True para desarrollo (verás páginas de error detalladas).
# Ponlo en False para producción.
DEBUG=True


# ===============================
# CONFIGURACIÓN DE BLOCKCHAIN
# ===============================
# URL del nodo blockchain al que se conectará Django.
# Para tu nodo local de Hardhat, esta es la dirección correcta.
BLOCKCHAIN_NETWORK_RPC_URL="http://127.0.0.1:8545"

# ¡¡LA VARIABLE MÁS IMPORTANTE Y SECRETA!!
# Es la clave privada de la billetera que actuará como la "institución".
# Esta es la que firma y paga las transacciones para emitir credenciales.
# Para el nodo de Hardhat, esta es la clave privada de la "Account #0" que te muestra en la consola.
DJANGO_WALLET_PRIVATE_KEY="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"


# ===============================
# CONFIGURACIÓN DE IPFS
# ===============================
# Elige una de las dos opciones (A o B) y comenta la otra.

# --- Opción A: Usando un nodo IPFS local (con IPFS Desktop o 'ipfs daemon') ---
IPFS_API_MULTIADDR="/ip4/127.0.0.1/tcp/5001"
IPFS_GATEWAY_URL="http://127.0.0.1:8080/ipfs/"


# --- Opción B: Usando un servicio como Pinata (https://pinata.cloud/) ---
# Descomenta estas líneas si prefieres usar Pinata en lugar de un nodo local.
# PINATA_API_KEY="TU_PINATA_API_KEY"
# PINATA_SECRET_API_KEY="TU_PINATA_SECRET_KEY"
# PINATA_GATEWAY_URL="https://gateway.pinata.cloud/ipfs/"